<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.blogspot.remis-thoughts</groupId>
	<artifactId>remis-thoughts</artifactId>
	<packaging>pom</packaging>
	<version>1.0-SNAPSHOT</version>

	<name>remis-thoughts</name>
	<description>A parent project for literate Java blog posts</description>
	<url>http://remis-thoughts.blogspot.com</url>
	<scm>
		<connection>scm:git:git@github.com:remis-thoughts/blog.git</connection>
		<url>scm:git:git@github.com:remis-thoughts/blog.git</url>
		<developerConnection>scm:git:git@github.com:remis-thoughts/blog.git</developerConnection>
	</scm>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<email>remis.thoughts@gmail.com</email>
		</developer>
	</developers>

	<modules>
		<module>perfect-hashes</module>
		<module>dynamic-optimisation</module>
		<module>triple-buffering</module>
	</modules>

	<!-- for NAR, until it's in the central repo... -->
	<pluginRepositories>
		<pluginRepository>
			<id>nar-repo</id>
			<name>Duns' Maven Snapshot Repository</name>
			<url>http://duns.github.com/maven-snapshots</url>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<generated.sources.dir>generated-sources</generated.sources.dir>
		<language>java</language>
		<skip.javadoc>false</skip.javadoc>
	</properties>

	<build>
		<defaultGoal>install</defaultGoal>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.4.3</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
					<executions>
						<execution>
							<id>copy-headers-to-noarch</id>
							<phase>process-sources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/nar/${project.artifactId}-${project.version}-noarch/include</outputDirectory>
								<resources>
									<resource>
										<directory>${project.build.directory}/${generated.sources.dir}</directory>
										<includes>
											<include>**/*.h</include>
										</includes>
									</resource>
								</resources>
								<overwrite>true</overwrite>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.4</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.8</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
							<configuration>
								<quiet>true</quiet>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>1.5</source>
						<target>1.5</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.7</version>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>${project.build.directory}/${generated.sources.dir}</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.2.1</version>
					<executions>
						<!-- need to "gem install literate_md" for this script: -->
						<execution>
							<id>tangle</id>
							<goals>
								<goal>exec</goal>
							</goals>
							<phase>generate-sources</phase>
							<configuration>
								<executable>/usr/bin/literate_md</executable>
								<arguments>
									<argument>--files</argument>
									<argument>${basedir}/src/main/md/${project.artifactId}.md</argument>
									<argument>--tangle</argument>
									<argument>--lang</argument>
									<argument>${language}</argument>
									<argument>--outputdir</argument>
									<argument>${project.build.directory}/${generated.sources.dir}</argument>
								</arguments>
							</configuration>
						</execution>
						<execution>
							<id>weave</id>
							<goals>
								<goal>exec</goal>
							</goals>
							<phase>generate-sources</phase>
							<configuration>
								<executable>/usr/bin/literate_md</executable>
								<arguments>
									<argument>--files</argument>
									<argument>${basedir}/src/main/md/${project.artifactId}.md</argument>
									<argument>--weave</argument>
									<argument>--lang</argument>
									<argument>java</argument>
									<argument>--outputdir</argument>
									<argument>${project.build.directory}</argument>
									<argument>--standalone</argument>
								</arguments>
								<skip>${skip.javadoc}</skip>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.2,]</versionRange>
										<goals>
											<goal>java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
					<executions>
						<execution>
							<!-- we need to turn the HTML snippet into a full doc if we want to -->
							<!-- use it as a package.html header -->
							<id>move-weave</id>
							<phase>process-sources</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<copy
										file="${project.build.directory}/${project.artifactId}.md.html"
										tofile="${project.build.directory}/${generated.sources.dir}/com/blogspot/remisthoughts/${shortname}/package.html"
										overwrite="true" />
								</target>
								<skip>${skip.javadoc}</skip>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-nar-plugin</artifactId>
					<extensions>true</extensions>
					<configuration>
						<libraries>
							<library>
								<type>shared</type>
							</library>
						</libraries>
						<tests>
							<test>
								<name>test</name>
								<link>shared</link>
							</test>
						</tests>
						<c>
							<defines>
								<define>_GLIBCXX_ATOMIC_BUILTINS</define>
							</defines>
							<includePaths>
								<includePath>src/main/include</includePath>
								<includePath>${project.build.directory}/${generated.sources.dir}</includePath>
							</includePaths>
							<testIncludePaths>
								<testIncludePath>src/main/include</testIncludePath>
								<testIncludePath>src/test/include</testIncludePath>
								<testIncludePath>${project.build.directory}/${generated.sources.dir}</testIncludePath>
							</testIncludePaths>
						</c>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
