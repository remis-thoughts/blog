@EMPTY = 0x0;

fn PREPEND(to, value) {
  new_node = #_malloc(0x10);
  @new_node = to;
  body = +(new_node, 0x8);
  @body = value;
  return new_node;
};

fn COUNT(list) {
  count = 0x0;
  while ≠(list, EMPTY) {
  	count = +(count, 0x1);
  	list = @(list);
  };
  return count;
};

fn GET(list, index) {
  while 0x1 {
  	if ≡(index, 0x0) {
      return @(+(list, 0x8));
  	};
  	list = @(list);
  	index = -(index, 0x1);
  };
};

list = PREPEND(PREPEND(PREPEND(EMPTY, 0x1), 0x2), 0x3);
if ≠(COUNT(list), 0x3) {
  return 0x1;
};

if ≠(GET(list, 0x1), 0x2) {
  return 0x1;
};

return 0x1E;